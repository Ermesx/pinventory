@using Humanizer
<div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Your Tags</h5>
        <span class="badge bg-secondary">@("tag".ToQuantity(Tags.Count))</span>
    </div>
    <div class="card-body">
        @if (Tags.Count == 0)
        {
            <div class="text-center text-muted py-4">
                <p class="mb-0">No tags yet. Add your first tag above!</p>
            </div>
        }
        else
        {
            <div class="d-flex flex-wrap gap-2">
                @foreach (var tag in Tags.OrderBy(t => t))
                {
                    <div class="badge @(IsGlobal ? "bg-primary" : "bg-secondary") d-flex align-items-center gap-2 fs-6 py-2 px-3">
                        <span>@tag</span>
                        <button type="button"
                                class="btn-close btn-close-white"
                                style="font-size: 0.7rem;"
                                @onclick="() => OnRemoveTag.InvokeAsync(tag)"
                                disabled="@IsProcessing"
                                aria-label="Remove tag">
                        </button>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public List<string> Tags { get; set; } = [];

    [Parameter]
    public bool IsProcessing { get; set; }

    [Parameter]
    public bool IsGlobal { get; set; }

    [Parameter]
    public EventCallback<string> OnRemoveTag { get; set; }
}

